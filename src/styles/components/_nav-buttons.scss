@use '../base/variables' as v;

@mixin nav-button-theme {
  text-decoration: none;
  font-family: v.$font-secondary; // Using Quicksand for nav links
  font-weight: 600; // Slightly bolder for better readability as buttons
  color: v.$color-dark-earthy-text; // Artisan bread text color for all states initially
  
  // "Piece of Bread" default style
  background-color: v.$color-light-yellow;
  border: 2px solid v.$color-bread-brown; // Crust
  padding: 0.7em 1.3em; // Adjusted padding for bread-like feel
  border-radius: v.$border-radius-md; // Rounded slice corners
  box-shadow: inset 0 0 4px rgba(v.$color-dark-earthy-text, 0.1); // Subtle inner dimension
  
  transition: background-color 0.3s ease, color 0.3s ease, border-color 0.3s ease, transform 0.2s ease, box-shadow 0.3s ease;
  display: inline-block; 
  line-height: 1;
  text-align: center;

  // "Toasting" effect on hover/focus
  &:hover, &:focus {
    background-color: v.$color-bread-brown; // Toasted bread background
    color: v.$color-light-yellow;           // Text color for toasted state
    border-color: darken(v.$color-bread-brown, 10%); // Slightly darker crust
    box-shadow: inset 0 0 5px rgba(v.$color-black, 0.2), 0 2px 4px rgba(v.$color-black, 0.15); // Toasted depth + lift
    text-decoration: none;
    transform: translateY(-1px); // Slight lift
  }

  // Active state: Should look like "toasted" bread
  // Note: The .is-active class would be applied by Astro/JS, this mixin provides the base style
  // If applying to elements that use .is-active, ensure that class is handled separately or integrated if common.
  // For simplicity here, this mixin covers the general appearance, and .is-active can override if needed.
  &.is-active { // Assuming .is-active might be used on these buttons too
    background-color: v.$color-bread-brown;
    color: v.$color-light-yellow;
    border-color: darken(v.$color-bread-brown, 10%);
    box-shadow: inset 0 0 5px rgba(v.$color-black, 0.2);
    font-weight: 700; 
    transform: none; 
  }
} 